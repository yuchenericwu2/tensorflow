diff --git a/absl/BUILD.bazel b/absl/BUILD.bazel
index 2a25ac64..60960bbd 100644
--- a/absl/BUILD.bazel
+++ b/absl/BUILD.bazel
@@ -15,11 +15,26 @@
 #
 
 load("@bazel_skylib//lib:selects.bzl", "selects")
+load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
 
 package(default_visibility = ["//visibility:public"])
 
 licenses(["notice"])
 
+bool_flag(
+    name = "use_dlls",
+    build_setting_default = False,
+    visibility = ["//visibility:public"],
+)
+
+config_setting(
+    name = "config_use_dlls",
+    flag_values = {
+        ":use_dlls": "True",
+    },
+    visibility = [":__subpackages__"],
+)
+
 config_setting(
     name = "clang_compiler",
     flag_values = {
diff --git a/absl/container/internal/btree.h b/absl/container/internal/btree.h
index 689e71a5..094e2e9e 100644
--- a/absl/container/internal/btree.h
+++ b/absl/container/internal/btree.h
@@ -1116,10 +1116,8 @@ class btree_iterator : private btree_iterator_generation_info {
   using slot_type = typename params_type::slot_type;
 
   // In sets, all iterators are const.
-  using iterator = absl::conditional_t<
-      is_map_container::value,
-      btree_iterator<normal_node, normal_reference, normal_pointer>,
-      btree_iterator<normal_node, const_reference, const_pointer>>;
+  using iterator =
+      btree_iterator<normal_node, normal_reference, normal_pointer>;
   using const_iterator =
       btree_iterator<const_node, const_reference, const_pointer>;
 
diff --git a/absl/copts/configure_copts.bzl b/absl/copts/configure_copts.bzl
index 9e0be28f..61a72a3a 100644
--- a/absl/copts/configure_copts.bzl
+++ b/absl/copts/configure_copts.bzl
@@ -23,6 +23,9 @@ ABSL_DEFAULT_COPTS = select({
     "@rules_cc//cc/compiler:clang": ABSL_LLVM_FLAGS,
     "@rules_cc//cc/compiler:gcc": ABSL_GCC_FLAGS,
     "//conditions:default": [],
+}) + select({
+    "//absl:config_use_dlls": ["/DABSL_BUILD_DLL"],
+    "//conditions:default": [],
 })
 
 ABSL_TEST_COPTS = select({
